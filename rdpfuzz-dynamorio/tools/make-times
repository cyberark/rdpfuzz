#!/bin/tcsh

# **********************************************************
# Copyright (c) 2002 VMware, Inc.  All rights reserved.
# **********************************************************

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of VMware, Inc. nor the names of its contributors may be
#   used to endorse or promote products derived from this software without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL VMWARE, INC. OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.

# example of usage: make-times 22 t-dy t-nody

echo "# in dir" `pwd`":" $2 "/" $3
# tail on # of benchmarks
paste $2 $3 | tail -$1 | awk '{print $1 "\t" $2/$7}' > ._sn
paste $2 $3 | tail -$1 | awk '{print $1 "\t" $3/$8}' > ._so
awk '{print $2}' < ._so > ._so1
cat header
paste ._sn ._so1
# harmonic mean = num / sum(1/datum):
awk '{sum += 1/$2; num+=1} END {print num/sum}' < ._so > ._so_ave
awk '{sum += 1/$2; num+=1} END {print num/sum}' < ._sn > ._sn_ave
echo "H_MEAN"  `cat ._sn_ave`  `cat ._so_ave`
rm ._so ._sn ._so1 ._so_ave ._sn_ave


